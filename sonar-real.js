#!/usr/bin/env node

/**
 * Script para ejecutar an√°lisis REAL de SonarQube usando sonar-scanner
 * Este script usa las reglas PROPIAS de SonarQube, no solo ESLint
 */

const { execSync } = require("child_process");
const fs = require("fs");
const path = require("path");

console.log("üîç Ejecutando an√°lisis REAL de SonarQube...");
console.log(
  "üìã Este script usa las reglas PROPIAS de SonarQube, no solo ESLint\n",
);

// Crear archivo sonar-project.properties si no existe
const sonarPropsPath = path.join(__dirname, "sonar-project.properties");
if (!fs.existsSync(sonarPropsPath)) {
  console.log("üìù Creando archivo sonar-project.properties...");
  const sonarConfig = `# Configuraci√≥n para an√°lisis SonarQube
sonar.projectKey=solid-nextjs
sonar.projectName=Solid Next.js
sonar.projectVersion=1.0
sonar.sources=app,components,types
sonar.exclusions=node_modules/**,reports/**,.next/**,out/**,coverage/**,*.config.js,*.config.ts,public/**
sonar.javascript.lcov.reportPaths=coverage/lcov.info
sonar.typescript.lcov.reportPaths=coverage/lcov.info

# Configuraci√≥n espec√≠fica para JavaScript/TypeScript
sonar.sourceEncoding=UTF-8

# OPCIONES para conectar a SonarQube:
# Opci√≥n 1: SonarCloud (comentar host.url)
# sonar.organization=tu-organizacion
# sonar.login=tu-token-sonarcloud

# Opci√≥n 2: SonarQube Server local (descomentar)
# sonar.host.url=http://localhost:9000
# sonar.login=tu-token-local

# Opci√≥n 3: Sin servidor (an√°lisis local limitado)
# No configurar host.url ni login
`;
  fs.writeFileSync(sonarPropsPath, sonarConfig);
}

try {
  console.log("üöÄ Ejecutando SonarQube Scanner...");
  console.log("   (Esto analizar√° con las reglas REALES de SonarQube)\n");

  // Ejecutar sonar-scanner
  execSync("npx sonar-scanner", {
    stdio: "inherit",
    cwd: __dirname,
  });

  console.log("\n‚úÖ ¬°An√°lisis SonarQube completado!");
  console.log("üìä El reporte se gener√≥ en la carpeta .scannerwork/");
} catch (error) {
  console.log("\n‚ùå Error en el an√°lisis SonarQube:");
  console.log("Esto es NORMAL si no tienes SonarQube configurado.");

  console.log("\nüéØ MEJOR OPCI√ìN: SonarLint en VSCode");
  console.log("   ‚úÖ YA INSTALADO en tu VSCode");
  console.log("   ‚úÖ Reglas REALES de SonarQube");
  console.log("   ‚úÖ An√°lisis en TIEMPO REAL");
  console.log("   üìã C√≥mo usarlo:");
  console.log("      1. Abre cualquier archivo .ts/.tsx");
  console.log("      2. Ve los problemas marcados en rojo");
  console.log("      3. Hover para ver detalles");

  console.log("\nüåê Para usar este script con SonarQube REAL:");
  console.log("   OPCI√ìN A - SonarCloud (gratis):");
  console.log("      1. Ir a https://sonarcloud.io");
  console.log("      2. Conectar con GitHub");
  console.log("      3. Importar este proyecto");
  console.log("      4. Copiar el token");
  console.log("      5. Editar sonar-project.properties");

  console.log("\n   OPCI√ìN B - SonarQube Server local:");
  console.log("      1. docker run -d -p 9000:9000 sonarqube:community");
  console.log("      2. Ir a http://localhost:9000");
  console.log("      3. Crear proyecto y token");
  console.log("      4. Editar sonar-project.properties");

  console.log("\nüìä MIENTRAS TANTO:");
  console.log("   - Usa SonarLint en VSCode (reglas REALES)");
  console.log("   - Usa npm run sonar:advanced (arreglos autom√°ticos)");

  console.error("\nüîß Detalles t√©cnicos:", error.message || String(error));
}
